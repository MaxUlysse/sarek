name: nf-core CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches: [dev]
  pull_request:
  release:
    types: [published]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run pipeline with test data
    # Only run on push if this is the nf-core dev branch (merged PRs)
    if: "${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/sarek') }}"
    runs-on: ubuntu-latest
    strategy:
      # HACK Remove after DSL2 rewrite is done
      fail-fast: false
      matrix:
        NXF_VER:
          - "22.10.1"
          - "latest-everything"
        test:
          - "default"
        profile: ["docker", "singularity", "conda"]
    env:
      NXF_ANSI_LOG: false
      TEST_DATA_BASE: "${{ github.workspace }}/test-datasets"
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v3

      - name: Cache test data
        id: cache-testdata
        uses: actions/cache@v3
        with:
          path: test-datasets/
          key: sarek3-test-data

      - name: Check out test data
        if: steps.cache-testdata.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: nf-core/test-datasets
          ref: sarek3
          path: test-datasets/

      - name: Replace remote paths in samplesheets
        run: |
          for f in tests/csv/3.0/*csv; do
            sed -i "s=https://raw.githubusercontent.com/nf-core/test-datasets/modules/=${{ github.workspace }}/test-datasets/=g" $f
            echo "========== $f ============"
            cat $f
            echo "========================================"
          done;

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pytest-workflow

      - uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-nextflow-

      - name: Install Nextflow ${{ matrix.NXF_VER }}
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash
          sudo mv nf-test /usr/local/bin/

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a

      - name: Run nf-test
        # uses: Wandalen/wretry.action@v1.0.11
        # with:
        #   command: PROFILE=${{ matrix.profile }} nf-test test tests/${{ matrix.test }}/main.nf.test --tap=test.tap
        #   attempt_limit: 3
        run: PROFILE=${{ matrix.profile }} nf-test test tests/${{ matrix.test }}/main.nf.test --tap=test.tap

      - name: Output log on failure
        if: failure()
        run: |
          cat test.tap
