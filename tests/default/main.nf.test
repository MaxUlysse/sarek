nextflow_pipeline {

    name "default"
    script "main.nf"

    test("Should run without failures") {
        when {
            params {
                outdir = baseDir.toURI().relativize(outputDir.toURI()).toString()
            }
        }

        then {
            assert path("$outputDir/multiqc").exists()
            assert path("$outputDir/preprocessing/markduplicates/test/test.md.cram").exists()
            assert path("$outputDir/preprocessing/markduplicates/test/test.md.cram.crai").exists()
            assert path("$outputDir/preprocessing/recalibrated/test/test.recal.cram").exists()
            assert path("$outputDir/preprocessing/recalibrated/test/test.recal.cram.crai").exists()
            assert path("$outputDir/reports/bcftools/strelka/test/test.strelka.variants.bcftools_stats.txt").exists()
            assert path("$outputDir/reports/fastqc/test-test_L1").exists()
            assert path("$outputDir/reports/markduplicates/test/test.md.cram.metrics").exists()
            assert path("$outputDir/reports/samtools/test/test.md.cram.stats").exists()
            assert path("$outputDir/reports/samtools/test/test.recal.cram.stats").exists()
            assert path("$outputDir/variant_calling/strelka/test/test.strelka.genome.vcf.gz").exists()
            assert path("$outputDir/variant_calling/strelka/test/test.strelka.genome.vcf.gz.tbi").exists()
            assert path("$outputDir/variant_calling/strelka/test/test.strelka.variants.vcf.gz").exists()
            assert path("$outputDir/variant_calling/strelka/test/test.strelka.variants.vcf.gz.tbi").exists()
            assert snapshot(workflow).match("workflow")
            assert snapshot(
                "$outputDir/csv/markduplicates.csv",
                "$outputDir/csv/markduplicates_no_table.csv",
                "$outputDir/csv/recalibrated.csv",
                "$outputDir/csv/variantcalled.csv",
                "$outputDir/preprocessing/recal_table/test/test.recal.table",
                "$outputDir/reports/mosdepth/test/test.md.mosdepth.global.dist.txt",
                "$outputDir/reports/mosdepth/test/test.md.mosdepth.region.dist.txt",
                "$outputDir/reports/mosdepth/test/test.md.mosdepth.summary.txt",
                "$outputDir/reports/mosdepth/test/test.md.regions.bed.gz",
                "$outputDir/reports/mosdepth/test/test.md.regions.bed.gz.csi",
                "$outputDir/reports/mosdepth/test/test.recal.mosdepth.global.dist.txt",
                "$outputDir/reports/mosdepth/test/test.recal.mosdepth.region.dist.txt",
                "$outputDir/reports/mosdepth/test/test.recal.mosdepth.summary.txt",
                "$outputDir/reports/mosdepth/test/test.recal.regions.bed.gz",
                "$outputDir/reports/mosdepth/test/test.recal.regions.bed.gz.csi",
                "$outputDir/reports/vcftools/strelka/test/test.strelka.variants.FILTER.summary",
                "$outputDir/reports/vcftools/strelka/test/test.strelka.variants.TsTv.count",
                "$outputDir/reports/vcftools/strelka/test/test.strelka.variants.TsTv.qual"
            ).match("files")
        }
    }
}
